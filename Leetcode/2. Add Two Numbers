/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        
        ListNode *head=NULL, *tail=NULL;
        int carry=0;
        ListNode *t1=l1, *t2=l2;
        
        while(t1!=NULL && t2!=NULL){
            int s=t1->val+t2->val;
            ListNode *ans;
            if(carry==0){
                ans=new ListNode(s%10);
            }else{
                ans=new ListNode((s + carry)%10);
            }
            carry=(s+carry)/10;
            
            if(!head){
                head=ans;
                tail=ans;
            }else{
                tail->next=ans;
                tail=tail->next;
            }
            t1=t1->next;
            t2=t2->next;
            
        }
        
        while(t1!=NULL){
            ListNode *ans=new ListNode((t1->val+carry)%10);
            tail->next=ans;
            carry=(t1->val+carry)/10;
            tail=tail->next;
            t1=t1->next;
            
        }
        
        while(t2!=NULL){
            ListNode *ans=new ListNode((t2->val+carry)%10);
            tail->next=ans;
            carry=(t2->val+carry)/10;
            tail=tail->next;
            t2=t2->next;
            
        }
        
        if(carry!=0){
            ListNode *ans=new ListNode(carry);
            tail->next=ans;
            tail=tail->next;
        }
       return head; 
    }
};

